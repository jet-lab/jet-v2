name: build

env:
  cli-id: anchor-v0.24.dev-solana-1.9.2
  rust-version: stable

on:
  push:
    branches:
      - "master"
  pull_request:

jobs:
  build-cli-deps:
    runs-on: ubuntu-latest
    steps:
      - id: cache-cli-deps
        uses: actions/cache@v3
        with:
          key: $${{ env.cli-id }}
          path: |
            ~/.local/share/solana
            ~/.cargo/bin/anchor
      - id: install-os-deps
        if: steps.cache-cli-deps.outputs.cache-hit != 'true'
        run: sudo apt-get update && sudo apt-get install -y pkg-config build-essential libudev-dev

      - id: install-solana-tools
        if: steps.cache-cli-deps.outputs.cache-hit != 'true'
        run: sh -c "$(curl -sSfL https://release.solana.com/v1.9.2/install)"

      - run: echo "PATH=$HOME/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_ENV

      - id: install-anchor-cli
        if: steps.cache-cli-deps.outputs.cache-hit != 'true'
        run: cargo install --git https://github.com/jet-lab/anchor anchor-cli --locked

  build_aarch64:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          target: aarch64-apple-darwin
          toolchain: stable

      - name: Check Build Errors
        run: cargo check --target aarch64-apple-darwin

  localnet-tests:
    runs-on: ubuntu-latest
    needs: [build-cli-deps]
    steps:
      - run: tests/test_on_localnet.sh

  coverage:
    runs-on: ubuntu-latest
    needs: [build-cli-deps]
    steps:
      - id: cache-cli-deps
        uses: actions/cache@v3
        with:
          key: $${{ env.cli-id }}
          path: |
            ~/.local/share/solana
            ~/.cargo/bin/anchor

      - uses: actions/checkout@v3

      - name: Install Rust nightly
        run: rustup default ${{ env.rust-version }} && rustup toolchain install ${{ env.rust-version }} --component llvm-tools-preview

      - id: install-os-deps
        run: sudo apt-get update && sudo apt-get install -y pkg-config build-essential libudev-dev

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - run: echo "PATH=$HOME/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_ENV
      - run: solana-keygen new --no-bip39-passphrase

      - name: Clippy Check
        run: cargo clippy --all-targets -- -Dwarnings

      - name: Check formatting
        run: cargo fmt --all --check

      - name: Check docs
        run: cargo test --doc

      - name: Generate code coverage
        run: cargo llvm-cov --workspace --lcov --output-path lcov.info --ignore-filename-regex programs/mock-pyth/src/lib.rs

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: lcov.info
          fail_ci_if_error: true
