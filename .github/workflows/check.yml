name: build

on:
  push:
    branches:
      - "master"
  pull_request:

jobs:
  hosted-tests-localnet-batch1:
    runs-on: ubuntu-latest
    container:
      image: jetprotocol/builder:rust-1.66.1-node-18.13.0-solana-1.13.7-anchor-0.26.0-1
    env:
      HOME: /home/tools
      BATCH: batch1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Get hosted-tests-localnet cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-hosted-tests-localnet-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            !target/idl
            !target/deploy

      - run: ./check hosted-tests-localnet


  hosted-tests-localnet-batch2:
    runs-on: ubuntu-latest
    container:
      image: jetprotocol/builder:rust-1.66.1-node-18.13.0-solana-1.13.7-anchor-0.26.0-1
    env:
      HOME: /home/tools
      BATCH: batch2
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Get hosted-tests-localnet cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-hosted-tests-localnet-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            !target/idl
            !target/deploy

      - run: ./check hosted-tests-localnet


  cargo-lint:
    runs-on: ubuntu-latest
    container:
      image: jetprotocol/builder:rust-1.66.1-node-18.13.0-solana-1.13.7-anchor-0.26.0-1
    env:
      HOME: /home/tools
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get cargo-lint cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cargo-lint-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/

      - run: ./check cargo-lint


  cargo-test:
    runs-on: ubuntu-latest
    container:
      image: jetprotocol/builder:rust-1.66.1-node-18.13.0-solana-1.13.7-anchor-0.26.0-1
    env:
      HOME: /home/tools
      CODECOV: true
    steps:
      - uses: actions/checkout@v3

      - name: Get cargo-test cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/

      - run: ./check cargo-test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: true

  e2e:
    runs-on: ubuntu-latest
    env:
      SOLANA_MAINNET_RPC: ${{ secrets.SOLANA_MAINNET_RPC }}
      REACT_APP_IP_REGISTRY: ${{ secrets.REACT_APP_IP_REGISTRY }}
      REACT_APP_RPC_DEV_TOKEN: ${{ secrets.REACT_APP_RPC_DEV_TOKEN }}
      REACT_APP_RPC_TOKEN: ${{ secrets.REACT_APP_RPC_TOKEN }}
      REACT_APP_LOGROCKET_PROJECT: ''

      REACT_APP_LOCAL_DATA_API: ${{ secrets.REACT_APP_LOCAL_DATA_API }}
      REACT_APP_DEV_DATA_API: ${{ secrets.REACT_APP_DEV_DATA_API }}
      REACT_APP_DATA_API: ${{ secrets.REACT_APP_DATA_API }}

      REACT_APP_LOCAL_WS_API: ${{ secrets.REACT_APP_LOCAL_WS_API }}
      REACT_APP_DEV_WS_API: ${{ secrets.REACT_APP_DEV_WS_API }}
      REACT_APP_WS_API: ${{ secrets.REACT_APP_WS_API }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: cachedeps
        name: Get cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-e2e-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/yarn.lock') }}
          path: |
            ~/.cache/act
            ~/.cache/solana
            ~/.cargo/
            ~/.local/share/solana/
            ~/.npm
            ~/.yarn
            target/
            !target/idl
            !target/deploy
          restore-keys: |
            ${{ runner.os }}-e2e-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-e2e-
            ${{ runner.os }}-

      - name: Install Rust
        if: steps.cachedeps.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - id: install-os-deps
        run: sudo apt-get update && sudo apt-get install -y pkg-config build-essential libudev-dev net-tools

      - name: Install Solana
        if: steps.cachedeps.outputs.cache-hit != 'true'
        # run: sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
        run: sh -c "$(curl -sSfL https://release.solana.com/v1.13.6/install)"

      - name: Install wasm-pack
        if: steps.cachedeps.outputs.cache-hit != 'true'
        run: cargo install wasm-pack

      - run: echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Install Anchor CLI
        run: yarn global add @project-serum/anchor-cli@0.26.0

      - run: solana-keygen new --no-bip39-passphrase

      - name: Set up GCP
        uses: ./.github/actions/setup_gcr
        with:
          key: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Inject Docker registry
        run: sed -i 's!PLACEHOLDER!gcr.io/${{ secrets.GCP_PROJECT }}!g' ./.github/e2e-docker-compose.yml

      - name: Start data environment
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./.github/e2e-docker-compose.yml"
          down-flags: "--volumes"
          services: |
            api
            mongodb
            postgres
            poller
            parser
      # Use this to debug if services don't start
      # - name: Docker and network check
      #   run: sleep 15 && docker compose -f ./.github/e2e-docker-compose.yml ps && netstat -peanut

      # - name: Network check
      #   run: sleep 15 && netstat -peanut 

      - name: E2E
        run: |
          SOLANA_LOGS=false ./check e2e
