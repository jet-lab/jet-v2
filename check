#!/bin/bash
# CI validation script.
# Run a single job from the CI workflow:
#   ./check <job-name>
#           (wrap the job name in quotes if it has spaces)
# Run the entire workflow:
#   ./check all
# Run jobs in the container used for CI:
#   ./check in-docker '<job-name or all>'

set -euxo pipefail

DOCKER_IMAGE=jetprotocol/builder:solana-1.10.35-anchor-0.25.0-3

anchor-test() {
    yarn install --frozen-lockfile
    yarn --cwd libraries/ts/margin build
    yarn --cwd libraries/ts/bonds build:wasm
    yarn --cwd libraries/ts/bonds copy:wasm
    yarn --cwd libraries/ts/bonds build
	anchor test  --skip-lint --skip-build $@ -- --features testing
}

hosted-tests-localnet() {
    tests/scripts/on_localnet.sh anchor-build
    SOLANA_LOGS=true tests/scripts/on_localnet.sh test combined
}

cargo-lint() {
    cargo fmt --all --check
    cargo clippy --all-targets -- -Dwarnings
    cargo test --doc
}

cargo-test() {
    if [[ ${CODECOV:-false} == true ]]; then
        cargo llvm-cov --workspace --lcov --output-path lcov.info --ignore-filename-regex programs/mock-pyth/src/lib.rs
    else 
        cargo test
    fi
}


all() {
    cargo-lint
    cargo-test
    hosted-tests-localnet
    anchor-test
}

in-docker() {
    docker run \
        -v "$(dirname $(realpath ${BASH_SOURCE[0]})):/jet-v2" \
        --workdir /jet-v2 \
        $DOCKER_IMAGE \
        /jet-v2/check $@
}

if [[ "$@" == '' ]]; then
    all
else
    $@
fi

set +x
echo -e '\n\n âœ” all good'
