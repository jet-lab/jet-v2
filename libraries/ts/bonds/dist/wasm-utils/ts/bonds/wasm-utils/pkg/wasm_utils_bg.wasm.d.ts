/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_order_free(a: number): void;
export function __wbg_get_order_owner(a: number): number;
export function __wbg_set_order_owner(a: number, b: number): void;
export function __wbg_get_order_order_tag(a: number): number;
export function __wbg_set_order_order_tag(a: number, b: number): void;
export function __wbg_get_order_order_id(a: number): number;
export function __wbg_set_order_order_id(a: number, b: number): void;
export function __wbg_get_order_base_size(a: number): number;
export function __wbg_set_order_base_size(a: number, b: number): void;
export function __wbg_get_order_quote_size(a: number): number;
export function __wbg_set_order_quote_size(a: number, b: number): void;
export function __wbg_get_order_limit_price(a: number): number;
export function __wbg_set_order_limit_price(a: number, b: number): void;
export function __wbg_orderamount_free(a: number): void;
export function __wbg_set_orderamount_base(a: number, b: number): void;
export function __wbg_set_orderamount_quote(a: number, b: number): void;
export function __wbg_set_orderamount_price(a: number, b: number): void;
export function __wbg_get_orderamount_base(a: number): number;
export function __wbg_get_orderamount_quote(a: number): number;
export function __wbg_get_orderamount_price(a: number): number;
export function MAX_U64(): number;
export function get_orders_from_slab(a: number, b: number): number;
export function build_order_amount_deprecated(a: number, b: number): number;
export function base_to_quote(a: number, b: number): number;
export function calculate_implied_price(a: number, b: number): number;
export function quote_to_base(a: number, b: number): number;
export function rate_to_price(a: number, b: number): number;
export function price_to_rate(a: number, b: number): number;
export function fixed_point_to_decimal(a: number): number;
export function ui_price(a: number): number;
export function __wbindgen_malloc(a: number): number;
